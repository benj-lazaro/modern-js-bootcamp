Salting Passwords
-----------------
- Hashed password is prone to a Rainbow Table Attack
    - Wherein a malicious user get a list (or lookup table) of commonly used hashed passwords 
    - Uses the list / table to compare it to another user's hashed password
    

- To defend from a Rainbow Table Attack
    - When creating a user account
        - Take the provided plaintext password

        - Generate a random salt value

        - Joins the plaintext password + random salt value

        - Pass the result to a hashing algorithm = hashed password
        
        - In the users.json, stores the
            - <hashed_password><separator_character><salt_value>
            

    - When a user logs in
        - Take the provided plaintext password

        - Pulls the corresponding record from users.json using the user's email address 
            - Retrieves the corresponding <hashed_password><separator_character><salt_value>

        - Joins the plaintext password + retreived salt value

        - Pass the result to a hashing algorithm = hashed password

        - Compares the result with the retreived hashed password from users.json
            - If both are equal then allow the user to login

